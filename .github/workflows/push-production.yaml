name: Build Packages Production

on:
  push:
    branches: ['main']
    paths-ignore: ['README.md']
  workflow_dispatch:

jobs:
  build:
    name: Build OS packages
    runs-on: ubuntu-16-core
    if: github.repository == 'wolfi-dev/os'

    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
      - name: Generate snapshot date
        id: snapshot-date
        run: |
          echo "date=$(date -u +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "epoch=$(date -u +%s)" >> $GITHUB_OUTPUT
        shell: bash

      - uses: actions/checkout@v3
      - run: echo "${{ secrets.MELANGE_RSA }}" > ./wolfi-signing.rsa
      - run: |
          sudo mkdir -p /etc/apk/keys
          sudo cp ./wolfi-signing.rsa.pub /etc/apk/keys/wolfi-signing.rsa.pub

      - uses: chainguard-dev/actions/setup-melange@main

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: "projects/618116202522/locations/global/workloadIdentityPools/prod-shared-e350/providers/prod-shared-gha"
          service_account: "prod-images-ci@prod-images-c6e5.iam.gserviceaccount.com"

      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: prod-images-c6e5

      - name: 'Check that GCloud is properly configured'
        run: |
          gcloud info
          gcloud --quiet alpha storage ls

      - name: 'Prepare package repository'
        run: |
          mkdir -p "${{ github.workspace }}/packages"
          cp /etc/apk/keys/wolfi-signing.rsa.pub ${{ github.workspace }}/packages/wolfi-signing.rsa.pub

      - name: 'Sync public package repository'
        run: |
          mkdir -p "${{ github.workspace }}/packages/x86_64"
          gsutil -m rsync -r gs://wolfi-production-registry-destination/os/x86_64/ "${{ github.workspace }}/packages/x86_64/"
          find "${{ github.workspace }}/packages" -print -exec touch \{} \;

      - name: 'Build Wolfi'
        run: |
          make MELANGE="sudo -E melange" MELANGE_DIR=/usr/share/melange KEY=wolfi-signing.rsa REPO="${{ github.workspace }}/packages" -j1

      - name: 'Normalize repository permissions'
        run: |
          sudo chown -R $(id -u):$(id -g) "${{ github.workspace }}/packages"

      - name: 'Upload the repository to the bucket'
        run: |
          cp /etc/apk/keys/wolfi-signing.rsa.pub ${{ github.workspace }}/packages/wolfi-signing.rsa.pub

          # Don't cache the APKINDEX.
          gcloud --quiet storage cp \
              --cache-control=no-store \
              "${{ github.workspace }}/packages/x86_64/APKINDEX.tar.gz" gs://wolfi-production-registry-destination/os/x86_64/

          gcloud --quiet storage cp \
              --cache-control=no-store \
              "${{ github.workspace }}/packages/x86_64/APKINDEX.json" gs://wolfi-production-registry-destination/os/x86_64/

          # apks will be cached in CDN for an hour by default.
          # Don't upload the object if it already exists.
          gcloud --quiet storage cp \
              --no-clobber \
              "${{ github.workspace }}/packages/x86_64/*.apk" gs://wolfi-production-registry-destination/os/x86_64/

  postrun:
    name: Build (arm64)
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - uses: slackapi/slack-github-action@007b2c3c751a190b6f0f040e47ed024deaa72844 # v1.23.0
        id: slack
        with:
          payload: '{"text": "[push-production] failure: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
